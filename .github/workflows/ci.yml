name: Continuous Integration (CI)

# Controls when the workflow will run
on:
  # Trigger the workflow manually
  workflow_dispatch:
  # Trigger on pushes to the main branch
  push:
    branches:
      - main
  # Trigger on pull requests targeting the main branch
  pull_request:
    branches:
      - main

# Cancel any previous runs for the same branch or PR that are still in progress
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  # Combined job for linting, testing, etc.
  build:
    # Define service containers needed for testing
    services:
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    # Use the latest Ubuntu runner
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up Python environment
      - name: Set up Python 3.9
        uses: actions/setup-python@v5 # Use latest version
        with:
          python-version: '3.9' # Pin to the version you use

      # 3. Cache pip dependencies
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip # Standard pip cache location
          # Create a unique key based on OS, Python version, and requirements file hash
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-

      # 4. Install dependencies from requirements.txt (including TestPyPI package)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools
          pip install --no-cache-dir -r requirements.txt 
          pip install --no-cache-dir --index-url https://test.pypi.org/simple/ --upgrade cba-core-lib
          # Install dependencies, ensuring pip checks TestPyPI *in addition* to PyPI
#          python -m pip install \
#            --extra-index-url https://test.pypi.org/simple/ \
#            -r requirements.txt

      # 5. Lint with flake8
      - name: Lint with flake8
        run: |
          flake8 service --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 service --count --max-complexity=10 --max-line-length=127 --statistics

      # 6. Run Unit Tests with Coverage
      - name: Run unit tests with pytest
        run: |
          pytest -v \
          --cov=service \
          --cov-report=term-missing \
          --cov-branch \
          tests/unit

      # 7. Run Integration Tests
      - name: Run integration tests with pytest
        env:
          # Expose service container details as environment variables for tests
          REDIS_HOST: redis # Service name defined above is used as hostname
          REDIS_PORT: 6379 # The container port
        run: |
          pytest -v -m integration tests/integration
